[tool.poetry]
name = "drone-metadata-automation"
version = "1.0.0"
description = "Automated metadata extraction and annotation generation for drone inspection workflows"
authors = ["Your Name <your.email@domain.com>"]
readme = "README.md"
packages = [{include = "drone_metadata"}]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.1.0"
numpy = "^1.25.0"
geopandas = "^0.14.0"
shapely = "^2.0.0"
folium = "^0.15.0"
pillow = "^10.0.0"
exifread = "^3.0.0"
pytz = "^2023.3"
python-dateutil = "^2.8.0"
scikit-learn = "^1.3.0"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
streamlit = "^1.28.0"
pydantic = "^2.5.0"
click = "^8.1.0"
tqdm = "^4.66.0"
sqlalchemy = "^2.0.0"
pyyaml = "^6.0"
jinja2 = "^3.1.0"
ffmpeg-python = "^0.2.0"
hachoir = "^3.2.0"
pymediainfo = "^6.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.9.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
pre-commit = "^3.5.0"

[tool.poetry.scripts]
drone-metadata = "drone_metadata.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
